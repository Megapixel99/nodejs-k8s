/*
  Kubernetes

  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

  The version of the OpenAPI document: v1.26.9+aa37255

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "io_k8s_api_core_v1_container_port.proto";
import public "io_k8s_api_core_v1_env_from_source.proto";
import public "io_k8s_api_core_v1_env_var.proto";
import public "io_k8s_api_core_v1_lifecycle.proto";
import public "io_k8s_api_core_v1_probe.proto";
import public "io_k8s_api_core_v1_resource_requirements.proto";
import public "io_k8s_api_core_v1_security_context.proto";
import public "io_k8s_api_core_v1_volume_device.proto";
import public "io_k8s_api_core_v1_volume_mount.proto";

message IoK8sApiCoreV1EphemeralContainer {

  // Arguments to the entrypoint. The image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  repeated string args = 3002589;

  // Entrypoint array. Not executed within a shell. The image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
  repeated string command = 413523788;

  // List of environment variables to set in the container. Cannot be updated.
  repeated IoK8sApiCoreV1EnvVar env = 100589;

  // List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
  repeated IoK8sApiCoreV1EnvFromSource envFrom = 517286347;

  // Container image name. More info: https://kubernetes.io/docs/concepts/containers/images
  string image = 100313435;

  // Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images  Possible enum values:  - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.  - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.  - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
  enum ImagePullPolicyEnum {
    ImagePullPolicyEnum_ALWAYS = 0;
    ImagePullPolicyEnum_IFNOTPRESENT = 1;
    ImagePullPolicyEnum_NEVER = 2;
  }

  ImagePullPolicyEnum imagePullPolicy = 166954898;

  // Lifecycle is not allowed for ephemeral containers.
  IoK8sApiCoreV1Lifecycle lifecycle = 302323862;

  // Probes are not allowed for ephemeral containers.
  IoK8sApiCoreV1Probe livenessProbe = 118277165;

  // Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
  string name = 3373707;

  // Ports are not allowed for ephemeral containers.
  repeated IoK8sApiCoreV1ContainerPort ports = 106854418;

  // Probes are not allowed for ephemeral containers.
  IoK8sApiCoreV1Probe readinessProbe = 297756519;

  // Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.
  IoK8sApiCoreV1ResourceRequirements resources = 372457950;

  // Optional: SecurityContext defines the security options the ephemeral container should be run with. If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
  IoK8sApiCoreV1SecurityContext securityContext = 12276148;

  // Probes are not allowed for ephemeral containers.
  IoK8sApiCoreV1Probe startupProbe = 440886480;

  // Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
  bool stdin = 109760136;

  // Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
  bool stdinOnce = 269868329;

  // If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container uses the namespaces configured in the Pod spec.  The container runtime must implement support for this feature. If the runtime does not support namespace targeting then the result of setting this field is undefined.
  string targetContainerName = 356932454;

  // Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
  string terminationMessagePath = 376663258;

  // Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.  Possible enum values:  - `\"FallbackToLogsOnError\"` will read the most recent contents of the container logs for the container status message when the container exits with an error and the terminationMessagePath has no contents.  - `\"File\"` is the default behavior and will set the container status message to the contents of the container's terminationMessagePath when the container exits.
  enum TerminationMessagePolicyEnum {
    TerminationMessagePolicyEnum_FALLBACKTOLOGSONERROR = 0;
    TerminationMessagePolicyEnum_FILE = 1;
  }

  TerminationMessagePolicyEnum terminationMessagePolicy = 427171704;

  // Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
  bool tty = 115193;

  // volumeDevices is the list of block devices to be used by the container.
  repeated IoK8sApiCoreV1VolumeDevice volumeDevices = 106754976;

  // Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers. Cannot be updated.
  repeated IoK8sApiCoreV1VolumeMount volumeMounts = 256123087;

  // Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
  string workingDir = 272939108;

}
