/*
  Kubernetes

  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

  The version of the OpenAPI document: v1.26.9+aa37255

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "io_k8s_api_apps_v1_daemon_set_update_strategy.proto";
import public "io_k8s_api_core_v1_pod_template_spec.proto";
import public "io_k8s_apimachinery_pkg_apis_meta_v1_label_selector.proto";

message IoK8sApiAppsV1DaemonSetSpec {

  // The minimum number of seconds for which a newly created DaemonSet pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
  int32 minReadySeconds = 4;

  // The number of old history to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
  int32 revisionHistoryLimit = 6;

  // A label query over pods that are managed by the daemon set. Must match in order to be controlled. It must match the pod template's labels. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors
  IoK8sApimachineryPkgApisMetaV1LabelSelector selector = 1;

  // An object that describes the pod that will be created. The DaemonSet will create exactly one copy of this pod on every node that matches the template's node selector (or on every node if no node selector is specified). More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template
  IoK8sApiCoreV1PodTemplateSpec template = 2;

  // An update strategy to replace existing DaemonSet pods with new pods.
  IoK8sApiAppsV1DaemonSetUpdateStrategy updateStrategy = 3;

}
