/*
  Kubernetes

  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

  The version of the OpenAPI document: v1.26.9+aa37255

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools;

import public "io_k8s_api_core_v1_aws_elastic_block_store_volume_source.proto";
import public "io_k8s_api_core_v1_azure_disk_volume_source.proto";
import public "io_k8s_api_core_v1_azure_file_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_ceph_fs_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_cinder_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_csi_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_fc_volume_source.proto";
import public "io_k8s_api_core_v1_flex_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_flocker_volume_source.proto";
import public "io_k8s_api_core_v1_gce_persistent_disk_volume_source.proto";
import public "io_k8s_api_core_v1_glusterfs_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_host_path_volume_source.proto";
import public "io_k8s_api_core_v1_iscsi_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_local_volume_source.proto";
import public "io_k8s_api_core_v1_nfs_volume_source.proto";
import public "io_k8s_api_core_v1_object_reference.proto";
import public "io_k8s_api_core_v1_photon_persistent_disk_volume_source.proto";
import public "io_k8s_api_core_v1_portworx_volume_source.proto";
import public "io_k8s_api_core_v1_quobyte_volume_source.proto";
import public "io_k8s_api_core_v1_rbd_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_scale_io_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_storage_os_persistent_volume_source.proto";
import public "io_k8s_api_core_v1_volume_node_affinity.proto";
import public "io_k8s_api_core_v1_vsphere_virtual_disk_volume_source.proto";
import public "io_k8s_apimachinery_pkg_api_resource_quantity.proto";

message IoK8sApiCoreV1PersistentVolumeSpec {

  // accessModes contains all ways the volume can be mounted. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes
  repeated string accessModes = 512289749;

  // awsElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  IoK8sApiCoreV1AWSElasticBlockStoreVolumeSource awsElasticBlockStore = 391488630;

  // azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
  IoK8sApiCoreV1AzureDiskVolumeSource azureDisk = 458308406;

  // azureFile represents an Azure File Service mount on the host and bind mount to the pod.
  IoK8sApiCoreV1AzureFilePersistentVolumeSource azureFile = 458249047;

  // capacity is the description of the persistent volume's resources and capacity. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity
  map<string, IoK8sApimachineryPkgApiResourceQuantity> capacity = 67824454;

  // cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
  IoK8sApiCoreV1CephFSPersistentVolumeSource cephfs = 290224091;

  // cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
  IoK8sApiCoreV1CinderPersistentVolumeSource cinder = 286593465;

  // claimRef is part of a bi-directional binding between PersistentVolume and PersistentVolumeClaim. Expected to be non-nil when bound. claim.VolumeName is the authoritative bind between PV and PVC. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#binding
  IoK8sApiCoreV1ObjectReference claimRef = 146136760;

  // csi represents storage that is handled by an external CSI driver (Beta feature).
  IoK8sApiCoreV1CSIPersistentVolumeSource csi = 98809;

  // fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
  IoK8sApiCoreV1FCVolumeSource fc = 3261;

  // flexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
  IoK8sApiCoreV1FlexPersistentVolumeSource flexVolume = 49558645;

  // flocker represents a Flocker volume attached to a kubelet's host machine and exposed to the pod for its usage. This depends on the Flocker control service being running
  IoK8sApiCoreV1FlockerVolumeSource flocker = 229519619;

  // gcePersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
  IoK8sApiCoreV1GCEPersistentDiskVolumeSource gcePersistentDisk = 501365701;

  // glusterfs represents a Glusterfs volume that is attached to a host and exposed to the pod. Provisioned by an admin. More info: https://examples.k8s.io/volumes/glusterfs/README.md
  IoK8sApiCoreV1GlusterfsPersistentVolumeSource glusterfs = 311444558;

  // hostPath represents a directory on the host. Provisioned by a developer or tester. This is useful for single-node development and testing only! On-host storage is not supported in any way and WILL NOT WORK in a multi-node cluster. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
  IoK8sApiCoreV1HostPathVolumeSource hostPath = 300697107;

  // iscsi represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. Provisioned by an admin.
  IoK8sApiCoreV1ISCSIPersistentVolumeSource iscsi = 100494479;

  // local represents directly-attached storage with node affinity
  IoK8sApiCoreV1LocalVolumeSource local = 103145323;

  // mountOptions is the list of mount options, e.g. [\"ro\", \"soft\"]. Not validated - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options
  repeated string mountOptions = 462210119;

  // nfs represents an NFS mount on the host. Provisioned by an admin. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
  IoK8sApiCoreV1NFSVolumeSource nfs = 108987;

  // nodeAffinity defines constraints that limit what nodes this volume can be accessed from. This field influences the scheduling of pods that use this volume.
  IoK8sApiCoreV1VolumeNodeAffinity nodeAffinity = 249554614;

  // persistentVolumeReclaimPolicy defines what happens to a persistent volume when released from its claim. Valid options are Retain (default for manually created PersistentVolumes), Delete (default for dynamically provisioned PersistentVolumes), and Recycle (deprecated). Recycle must be supported by the volume plugin underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming  Possible enum values:  - `\"Delete\"` means the volume will be deleted from Kubernetes on release from its claim. The volume plugin must support Deletion.  - `\"Recycle\"` means the volume will be recycled back into the pool of unbound persistent volumes on release from its claim. The volume plugin must support Recycling.  - `\"Retain\"` means the volume will be left in its current phase (Released) for manual reclamation by the administrator. The default policy is Retain.
  enum PersistentVolumeReclaimPolicyEnum {
    PersistentVolumeReclaimPolicyEnum_DELETE = 0;
    PersistentVolumeReclaimPolicyEnum_RECYCLE = 1;
    PersistentVolumeReclaimPolicyEnum_RETAIN = 2;
  }

  PersistentVolumeReclaimPolicyEnum persistentVolumeReclaimPolicy = 296726680;

  // photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
  IoK8sApiCoreV1PhotonPersistentDiskVolumeSource photonPersistentDisk = 174999443;

  // portworxVolume represents a portworx volume attached and mounted on kubelets host machine
  IoK8sApiCoreV1PortworxVolumeSource portworxVolume = 5900522;

  // quobyte represents a Quobyte mount on the host that shares a pod's lifetime
  IoK8sApiCoreV1QuobyteVolumeSource quobyte = 126990932;

  // rbd represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
  IoK8sApiCoreV1RBDPersistentVolumeSource rbd = 112692;

  // scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
  IoK8sApiCoreV1ScaleIOPersistentVolumeSource scaleIO = 300279795;

  // storageClassName is the name of StorageClass to which this persistent volume belongs. Empty value means that this volume does not belong to any StorageClass.
  string storageClassName = 73493529;

  // storageOS represents a StorageOS volume that is attached to the kubelet's host machine and mounted into the pod More info: https://examples.k8s.io/volumes/storageos/README.md
  IoK8sApiCoreV1StorageOSPersistentVolumeSource storageos = 78224802;

  // volumeMode defines if a volume is intended to be used with a formatted filesystem or to remain in raw block state. Value of Filesystem is implied when not included in spec.
  string volumeMode = 479037477;

  // vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
  IoK8sApiCoreV1VsphereVirtualDiskVolumeSource vsphereVolume = 4287677;

}
